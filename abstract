#!/usr/bin/env python3
from  matplotlib.patches import Patch
import networkx as nx
import matplotlib.pyplot as plt

try:
    from networkx.drawing.nx_agraph import graphviz_layout
except ImportError:
    raise ImportError("This example needs Graphviz and either PyGraphviz or Pydot")

import pandas
propagationData = pandas.read_csv('UpdatedPropagationRecords.csv')
alarmData       = pandas.read_csv('smoothed_alarm_strengths.csv')

original = {17, 19, 25}
original_color = (131/255, 1.0, 66/255)
time_window = 2 # in seconds
windows = 5
time_colors = [(r/255, g/255, b/255) 
               for r, g, b in
               [(178, 2, 0)] + [(255, int(x * (200 / windows)), 32) for x in range(windows)]]

def visualize():
    for second in range(163):
        interactions = propagationData[(propagationData.TimeForAlarm == second)]
        alarmSecondData = alarmData[(alarmData.Frame < (second + 1) * 30) & (alarmData.Frame > (second) * 30)]
        for frame in range(29):
            alarmFrameData = alarmSecondData.iloc[frame]
            G = nx.DiGraph()
            colorMap = []
            alarmedAnts = [(i, alarmFrameData['V' + str(i)]) for i in range(1, 62)]
            alarmedAnts = sorted(alarmedAnts, key=lambda t : t[1])
            for i, strength in alarmedAnts:
                G.add_node(i, label=str(i))
                colorMap.append(strength)
            for index, row in interactions.iterrows():
                source, dest = row['AlarmedFrom'], row['Alarmed']
                if not row['Self-Excitation']:
                    G.add_edge(source, dest)
            # dot, neato, fdp, sfdp, twopi, circo: see https://www.graphviz.org/
            pos=graphviz_layout(G, prog='circo', args='')
            nx.draw(G, pos, node_color=colorMap, node_size=200, cmap=plt.cm.Reds, with_labels=True, font_size=11)
            #plt.show()
            print(second * 30 + frame)
            plt.savefig('abstract_frames/{}.png'.format(str(second * 30 + frame).rjust(4, '0')), dpi=300)
            plt.clf()

visualize()
